{"ast":null,"code":"import _classCallCheck from \"/Users/irenerojas/apps/pixar-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/irenerojas/apps/pixar-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/irenerojas/apps/pixar-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/irenerojas/apps/pixar-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/irenerojas/apps/pixar-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/irenerojas/apps/pixar-react/src/Radio/Radio.js\";\nimport React, { Component } from 'react';\nimport answers from \"../answers.json\";\n\nvar Radio =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Radio, _Component);\n\n  function Radio() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Radio);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Radio)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedOption: \" \",\n      answers: answers\n    };\n\n    _this.handleOptionChange = function (event) {\n      event.preventDefault();\n      console.log(\"clicked\");\n    };\n\n    return _this;\n  }\n\n  _createClass(Radio, [{\n    key: \"render\",\n    // ternery? if option in answerChoices[], add a button\n    //   create groups for each question\n    // for each item in a group, create a radio button with that name\n    // \n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.state.answers.map(function (answer) {\n        return React.createElement(\"input\", {\n          key: answer.id,\n          type: \"radio\",\n          value: answer.value,\n          checked: answer.selected,\n          onChange: _this2.handleOptionChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Radio;\n}(Component);\n\nexport default Radio;","map":{"version":3,"sources":["/Users/irenerojas/apps/pixar-react/src/Radio/Radio.js"],"names":["React","Component","answers","Radio","state","selectedOption","handleOptionChange","event","preventDefault","console","log","map","answer","id","value","selected"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,iBAApB;;IAEMC,K;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,cAAc,EAAE,GADV;AAENH,MAAAA,OAAO,EAAPA;AAFM,K;;UAORI,kB,GAAqB,UAACC,KAAD,EAAW;AAC5BA,MAAAA,KAAK,CAACC,cAAN;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,K;;;;;;;AAED;AACF;AACA;AACA;6BAGW;AAAA;;AACP,aAGM;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKN,KAAL,CAAWF,OAAX,CAAmBS,GAAnB,CAAuB,UAAAC,MAAM,EAAI;AAClC,eACI;AACI,UAAA,GAAG,EAAEA,MAAM,CAACC,EADhB;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,KAAK,EAAED,MAAM,CAACE,KAHlB;AAII,UAAA,OAAO,EAAEF,MAAM,CAACG,QAJpB;AAKI,UAAA,QAAQ,EAAE,MAAI,CAACT,kBALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQC,OATA,CADL,CAFF,CAHN;AAuBD;;;;EA5CiBL,S;;AA+CpB,eAAeE,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport answers from \"../answers.json\";\n\nclass Radio extends Component {\n\n  state = {\n    selectedOption: \" \",\n    answers\n  };\n\n  \n\n  handleOptionChange = (event) => {\n      event.preventDefault();\n    console.log(\"clicked\");\n  };\n\n  // ternery? if option in answerChoices[], add a button\n//   create groups for each question\n// for each item in a group, create a radio button with that name\n// \n\n\n  render() {\n    return (\n\n\n          <div className=\"radio\">\n\n            <form>\n                {this.state.answers.map(answer => {\n                return (\n                    <input \n                        key={answer.id}\n                        type=\"radio\" \n                        value={answer.value} \n                        checked={answer.selected}\n                        onChange={this.handleOptionChange} />\n                    )\n                })}\n            </form>\n            \n          </div>\n\n        \n\n    );\n  }\n}\n\nexport default Radio;\n\n\n\n               "]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/irenerojas/apps/pixar-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/irenerojas/apps/pixar-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/irenerojas/apps/pixar-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/irenerojas/apps/pixar-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/irenerojas/apps/pixar-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/irenerojas/apps/pixar-react/src/Questions/Questions.js\";\nimport React, { Component } from \"react\";\nimport QuestionModel from \"../QuestionModel\";\nvar answerChoices = [{\n  answers: [{\n    label: \"2001: A Space Odyssey\",\n    value: false\n  }, {\n    label: \"The Shining\",\n    value: true\n  }, {\n    label: \"One Flew Over the Cuckoo's Nest\",\n    value: false\n  }, {\n    label: \"The Godfather\",\n    value: false\n  }]\n}, {\n  answers: [{\n    label: \"Luxo Ball\",\n    value: false\n  }, {\n    label: \"Luxo\",\n    value: false\n  }, {\n    label: \"Luxo, Jr.\",\n    value: true\n  }, {\n    label: \"Tinny\",\n    value: false\n  }]\n}, {\n  answers: [{\n    label: \"Up\",\n    value: true\n  }, {\n    label: \"A Bug's Life\",\n    value: false\n  }, {\n    label: \"Toy Story 2\",\n    value: false\n  }, {\n    label: \"Tinny\",\n    value: false\n  }]\n}, {\n  answers: [{\n    label: \"Brave\",\n    value: false\n  }, {\n    label: \"Inside Out\",\n    value: false\n  }, {\n    label: \"Up\",\n    value: false\n  }, {\n    label: \"The Incredibles\",\n    value: true\n  }]\n}, {\n  answers: [{\n    label: \"Albert Brooks\",\n    value: false\n  }, {\n    label: \"Billy Crystal\",\n    value: true\n  }, {\n    label: \"John Ratzenberger\",\n    value: false\n  }, {\n    label: \"John Goodman\",\n    value: false\n  }]\n}, {\n  answers: [{\n    label: \"2004\",\n    value: false\n  }, {\n    label: \"2005\",\n    value: false\n  }, {\n    label: \"2006\",\n    value: true\n  }, {\n    label: \"2007\",\n    value: false\n  }]\n}, {\n  answers: [{\n    label: \"Boo\",\n    value: false\n  }, {\n    label: \"Kitty\",\n    value: true\n  }]\n}, {\n  answers: [{\n    label: \"Albert Brooks\",\n    value: false\n  }, {\n    label: \"Denis Leary\",\n    value: false\n  }, {\n    label: \"Brad Garrett\",\n    value: false\n  }, {\n    label: \"William H. Macy\",\n    value: true\n  }]\n}];\n\nvar Questions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Questions, _Component);\n\n  function Questions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Questions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Questions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Questions, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"questionsDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, this.state.questions.map(function (question) {\n        return React.createElement(QuestionModel, {\n          key: question.id,\n          text: question.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Questions;\n}(Component);\n\nexport default Questions;","map":{"version":3,"sources":["/Users/irenerojas/apps/pixar-react/src/Questions/Questions.js"],"names":["React","Component","QuestionModel","answerChoices","answers","label","value","Questions","state","questions","map","question","id","text"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport QuestionModel from \"../QuestionModel\";\n\nconst answerChoices = [\n    {answers: [\n        {\n            label: \"2001: A Space Odyssey\",\n            value: false\n        },\n        {\n            label: \"The Shining\",\n            value: true\n        },\n        {\n            label: \"One Flew Over the Cuckoo's Nest\",\n            value: false\n        },\n        {\n            label: \"The Godfather\",\n            value: false\n        }\n        ]},\n    {answers: [\n        {\n            label: \"Luxo Ball\",\n            value: false\n        },\n        { \n            label: \"Luxo\",\n            value: false\n        },\n        {\n            label: \"Luxo, Jr.\",\n            value: true\n        },\n        {\n            label: \"Tinny\",\n            value: false\n        }\n        ]},\n    {answers: [\n        {\n            label: \"Up\",\n            value: true\n        },\n        { \n            label: \"A Bug's Life\",\n            value: false\n        },\n        {\n            label: \"Toy Story 2\",\n            value: false\n        },\n        {\n            label: \"Tinny\",\n            value: false\n        }\n        ]},\n    {answers: [\n        {\n            label: \"Brave\",\n            value: false\n        },\n        { \n            label: \"Inside Out\",\n            value: false\n        },\n        {\n            label: \"Up\",\n            value: false\n        },\n        {\n            label: \"The Incredibles\",\n            value: true\n        }\n        ]},\n    {answers: [\n        {\n            label: \"Albert Brooks\",\n            value: false\n        },\n        { \n            label: \"Billy Crystal\",\n            value: true\n        },\n        {\n            label: \"John Ratzenberger\",\n            value: false\n        },\n        {\n            label: \"John Goodman\",\n            value: false\n        }\n        ]},\n    {answers: [\n        {\n            label: \"2004\",\n            value: false\n        },\n        { \n            label: \"2005\",\n            value: false\n        },\n        {\n            label: \"2006\",\n            value: true\n        },\n        {\n            label: \"2007\",\n            value: false\n        }\n        ]},\n    {answers: [\n        {\n            label: \"Boo\",\n            value: false\n        },\n        { \n            label: \"Kitty\",\n            value: true\n        }\n        ]},\n    {answers: [\n        {\n            label: \"Albert Brooks\",\n            value: false\n        },\n        { \n            label: \"Denis Leary\",\n            value: false\n        },\n        {\n            label: \"Brad Garrett\",\n            value: false\n        },\n        {\n            label: \"William H. Macy\",\n            value: true\n        }\n        ]}\n    ];\n\n\nclass Questions extends Component {\n\n    state = {\n    }\n\n    render() {\n        return (\n    <div className=\"questionsDiv\">\n\n        <ol>\n            {this.state.questions.map(question => {\n             return (\n                <QuestionModel\n                    key={question.id}\n                    text={question.text}\n                />  \n                )    \n            })}\n        </ol>\n\n        </div>\n\n        )\n    }\n\n}\n\n\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/irenerojas/apps/pixar-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/irenerojas/apps/pixar-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/irenerojas/apps/pixar-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/irenerojas/apps/pixar-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/irenerojas/apps/pixar-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/irenerojas/apps/pixar-react/src/Radio/Radio.js\";\nimport React, { Component } from 'react';\nimport answers from \"../questions.json\";\n\nvar Radio =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Radio, _Component);\n\n  function Radio() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Radio);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Radio)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedOption: \" \",\n      answers: answers\n    };\n\n    _this.handleOptionChange = function (event) {\n      _this.setState({\n        selectedOption: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Radio, [{\n    key: \"render\",\n    // do I need to map radio component itself?\n    // ternery? if option in answerChoices[], add a button\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"radioStyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"option\",\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Radio;\n}(Component);\n\nexport default Radio;","map":{"version":3,"sources":["/Users/irenerojas/apps/pixar-react/src/Radio/Radio.js"],"names":["React","Component","answers","Radio","state","selectedOption","handleOptionChange","event","setState","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,mBAApB;;IAEMC,K;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,cAAc,EAAE,GADV;AAENH,MAAAA,OAAO,EAAPA;AAFM,K;;UAKRI,kB,GAAqB,UAACC,KAAD,EAAW;AAC9B,YAAKC,QAAL,CAAc;AACZH,QAAAA,cAAc,EAAEE,KAAK,CAACE,MAAN,CAAaC;AADjB,OAAd;AAGD,K;;;;;;;AAMH;AACA;6BAEW;AACP,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,QAAQ,EAAE,KAAKJ,kBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CAHJ,CADF;AAmBD;;;;EAxCiBL,S;;AA2CpB,eAAeE,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport answers from \"../questions.json\";\n\nclass Radio extends Component {\n\n  state = {\n    selectedOption: \" \",\n    answers\n  };\n\n  handleOptionChange = (event) => {\n    this.setState({\n      selectedOption: event.target.value\n    });\n  };\n\n\n\n\n\n// do I need to map radio component itself?\n// ternery? if option in answerChoices[], add a button\n\n  render() {\n    return (\n      <div className=\"radioStyle\">\n\n\n          <div className=\"radio\">\n\n            <form>\n              <input \n                type=\"radio\" \n                value=\"option\" \n                onChange={this.handleOptionChange} />\n            </form>\n            \n          </div>\n\n        \n      </div>\n\n    );\n  }\n}\n\nexport default Radio;\n"]},"metadata":{},"sourceType":"module"}